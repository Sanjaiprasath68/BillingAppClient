// src/components/MainContent.js
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './MainContent.css';

const MainContent = () => {
  const [products, setProducts] = useState([]);
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedProducts, setSelectedProducts] = useState([]);

  // Fetch products when the component mounts
  useEffect(() => {
    axios.get('http://localhost:5000/products')
      .then(response => setProducts(response.data))
      .catch(error => console.error('Error fetching products:', error));
  }, []);

  // Handle changes to the search input
  const handleSearchChange = (e) => {
    setSearchQuery(e.target.value);
  };

  // Filter products based on search query
  const filteredProducts = products.filter(product =>
    product.name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  // Handle product click to add to selected products
  const handleProductClick = (product) => {
    if (!selectedProducts.some(p => p._id === product._id)) {
      setSelectedProducts(prev => [...prev, { ...product, quantity: 1 }]); // Add quantity
    }
  };

  // Handle removing a product from the selected products list
  const handleRemoveClick = (productId) => {
    setSelectedProducts(prev => prev.filter(p => p._id !== productId));
  };

  // Update the quantity of a product
  const handleQuantityChange = (productId, newQuantity) => {
    setSelectedProducts(prev => prev.map(p => 
      p._id === productId ? { ...p, quantity: newQuantity } : p
    ));
  };

  // Calculate the total amount of selected products
  const totalAmount = selectedProducts.reduce((sum, product) => 
    sum + (product.total * product.quantity), 0
  ).toFixed(2);

  return (
    <div className="main bg-dark text-light p-3">
      <div className="container">
        <div className="search-bar-container mb-3">
          <input
            type="text"
            className="form-control search-input"
            placeholder="Search for a product..."
            value={searchQuery}
            onChange={handleSearchChange}
          />
        </div>

        <div className="product-list mb-3">
          {filteredProducts.length > 0 ? (
            <ul className="list-group">
              {filteredProducts.map((product) => (
                <li
                  key={product._id}
                  className="list-group-item list-group-item-action"
                  onClick={() => handleProductClick(product)}
                >
                  {product.name}
                </li>
              ))}
            </ul>
          ) : (
            <p>No products found. Please try a different search.</p>
          )}
        </div>

        <div className="selected-products">
          <h5>Selected Products</h5>
          {selectedProducts.length > 0 ? (
            <table className="table table-dark table-striped">
              <thead>
                <tr>
                  <th>Product Name</th>
                  <th>Price</th>
                  <th>GST Amount</th>
                  <th>Total (per unit)</th>
                  <th>Quantity</th>
                  <th>Total for this Product</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                {selectedProducts.map(product => (
                  <tr key={product._id}>
                    <td>{product.name}</td>
                    <td>${product.price.toFixed(2)}</td>
                    <td>${product.gst.toFixed(2)}</td>
                    <td>${product.total.toFixed(2)}</td>
                    <td>
                      <div className="d-flex align-items-center">
                        <button
                          className="btn btn-secondary btn-sm"
                          onClick={() => handleQuantityChange(product._id, Math.max(1, product.quantity - 1))}
                        >
                          -
                        </button>
                        <input
                          type="number"
                          className="form-control form-control-sm mx-2"
                          value={product.quantity}
                          min="1"
                          onChange={(e) => handleQuantityChange(product._id, parseInt(e.target.value) || 1)}
                        />
                        <button
                          className="btn btn-secondary btn-sm"
                          onClick={() => handleQuantityChange(product._id, product.quantity + 1)}
                        >
                          +
                        </button>
                      </div>
                    </td>
                    <td>${(product.total * product.quantity).toFixed(2)}</td>
                    <td>
                      <button
                        className="btn btn-danger btn-sm"
                        onClick={() => handleRemoveClick(product._id)}
                      >
                        Remove
                      </button>
                    </td>
                  </tr>
                ))}
                <tr>
                  <td colSpan="6" className="text-end fw-bold">Total Amount:</td>
                  <td>${totalAmount}</td>
                </tr>
              </tbody>
            </table>
          ) : (
            <p>No products selected. Click on a product from the list to add it here.</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default MainContent;
